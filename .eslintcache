[{"/Users/krzysztofdziedzic/react/cms-frontend/src/index.js":"1","/Users/krzysztofdziedzic/react/cms-frontend/src/App.js":"2","/Users/krzysztofdziedzic/react/cms-frontend/src/reportWebVitals.js":"3","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/login/LoginScreen.js":"4","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/register/RegisterScreen.js":"5","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/not_found/NotFoundScreen.js":"6","/Users/krzysztofdziedzic/react/cms-frontend/src/firebaseConfig.js":"7","/Users/krzysztofdziedzic/react/cms-frontend/src/muiTheme.js":"8","/Users/krzysztofdziedzic/react/cms-frontend/src/styles/mui/generalStyles.js":"9","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseErrorsHelper.js":"10","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseAuthObserver.js":"11","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/home/HomeScreen.js":"12","/Users/krzysztofdziedzic/react/cms-frontend/src/components/toolbar.js":"13"},{"size":500,"mtime":1608574986633,"results":"14","hashOfConfig":"15"},{"size":1283,"mtime":1608841372965,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608567676926,"results":"17","hashOfConfig":"15"},{"size":5472,"mtime":1608815882141,"results":"18","hashOfConfig":"15"},{"size":7181,"mtime":1608814571625,"results":"19","hashOfConfig":"15"},{"size":110,"mtime":1608641668791,"results":"20","hashOfConfig":"15"},{"size":500,"mtime":1608666520606,"results":"21","hashOfConfig":"15"},{"size":546,"mtime":1608840101132,"results":"22","hashOfConfig":"15"},{"size":296,"mtime":1608812487144,"results":"23","hashOfConfig":"15"},{"size":188,"mtime":1608813290904,"results":"24","hashOfConfig":"15"},{"size":400,"mtime":1608820630852,"results":"25","hashOfConfig":"15"},{"size":106,"mtime":1608840108136,"results":"26","hashOfConfig":"15"},{"size":457,"mtime":1608841447275,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1uubitg",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/krzysztofdziedzic/react/cms-frontend/src/index.js",[],["58","59"],"/Users/krzysztofdziedzic/react/cms-frontend/src/App.js",["60"],"/Users/krzysztofdziedzic/react/cms-frontend/src/reportWebVitals.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/login/LoginScreen.js",["61"],"import '../../styles/general/style.css';\nimport Paper from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useForm, Controller } from 'react-hook-form';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport 'firebase/auth';\nimport firebaseApp from '../../firebaseConfig';\n\nfunction LoginScreen() {\n\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const [isInProgress, setProgressVisibility] = useState(false);\n    const [loginError, setLoginError] = useState(\"\");\n\n    const classes = generalStyles();\n\n    const auth = firebaseApp.auth();\n\n    const onLoginClicked = async data => {\n        console.log(data);\n        setProgressVisibility(true);\n        try {\n            const result = await auth.signInWithEmailAndPassword(data.email, data.password);\n            console.log(result);\n        } catch (error) {\n            setLoginError(error.message);\n        } finally {\n            setProgressVisibility(false);\n        }\n\n    }\n\n    return (\n        <Paper className=\"main_container\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div className=\"header_style\">Logowanie</div>\n                </Grid>\n\n                <form onSubmit={handleSubmit(onLoginClicked)} className={classes.fillMaxWidth}>\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"email\"\n                                as={\n                                    <TextField\n                                        id=\"email\"\n                                        helperText={fieldsErrors.email ? fieldsErrors.email.message : null}\n                                        variant=\"standard\"\n                                        label=\"Email\"\n                                        error={fieldsErrors.email !== undefined}\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    pattern: {\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                        message: 'Niepoprawny email'\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"password\"\n                                as={\n                                    <TextField\n                                        id=\"password\"\n                                        helperText={fieldsErrors.password ? fieldsErrors.password.message : null}\n                                        variant=\"standard\"\n                                        label=\"Hasło\"\n                                        error={fieldsErrors.password !== undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {isInProgress && <CircularProgress />}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {loginError !== \"\" && <div className={\"general_error\"}>{loginError}</div>}\n                    </Grid>\n\n                    <Grid item xs={12} className={`${classes.centerChildren} ${classes.margin}`}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.margin}>\n                            Zaloguj się\n                         </Button>\n                    </Grid>\n\n                    <Grid item xs={12} className=\"centered_grid\">\n                        <div>Jeśli nie masz konta, <Link to=\"/register\" className={\"link\"}> zarejetruj się. </Link></div>\n                    </Grid>\n                </form>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default LoginScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/register/RegisterScreen.js",["62","63","64","65"],"import '../../styles/general/style.css';\nimport Paper from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport { getRegisterError } from '../../helpers/firebase/firebaseErrorsHelper';\nimport { useHistory } from \"react-router-dom\";\n\nimport 'firebase/auth';\nimport firebaseApp from '../../firebaseConfig';\n\nfunction RegisterScreen() {\n\n    const [isInProgress, setProgressVisibility] = useState(false);\n    const [registerError, setRegisterError] = useState(\"\");\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const history = useHistory(); \n\n    const auth = firebaseApp.auth();\n    const classes = generalStyles();\n\n\n    const onRegisteredCliked = async data => {\n        try {\n            setProgressVisibility(true);\n            var registeredUser = await auth.createUserWithEmailAndPassword(data.email, data.password);\n            history.goBack();\n            reset();\n        } catch (error) {\n            setRegisterError(getRegisterError(error.code));\n        }\n        setProgressVisibility(false);\n    }\n\n    return (\n        <Paper className=\"main_container\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div className=\"header_style\">Rejestracja</div>\n                </Grid>\n\n                <form onSubmit={handleSubmit(onRegisteredCliked)} className={classes.fillMaxWidth}>\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"email\"\n                                as={\n                                    <TextField\n                                        id=\"email\"\n                                        helperText={fieldsErrors.email ? fieldsErrors.email.message : null}\n                                        variant=\"standard\"\n                                        label=\"Email\"\n                                        error={fieldsErrors.email != undefined}\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    pattern: {\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                        message: 'Niepoprawny email'\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"password\"\n                                as={\n                                    <TextField\n                                        id=\"password\"\n                                        helperText={fieldsErrors.password ? fieldsErrors.password.message : null}\n                                        variant=\"standard\"\n                                        label=\"Hasło\"\n                                        error={fieldsErrors.password != undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    minLength: {\n                                        value: 4,\n                                        message: \"Podane hasło jest za krótkie\"\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"passwordRe\"\n                                as={\n                                    <TextField\n                                        id=\"passwordRe\"\n                                        helperText={fieldsErrors.passwordRe ? fieldsErrors.passwordRe.message : null}\n                                        variant=\"standard\"\n                                        label=\"Powtórz hasło\"\n                                        error={fieldsErrors.passwordRe != undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    minLength: {\n                                        value: 4,\n                                        message: \"Podane hasło jest za krótkie\"\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {isInProgress && <CircularProgress />}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                            {registerError !== \"\" && <div className={\"general_error\"}>{registerError}</div>}\n                    </Grid>\n\n                    <Grid item xs={12} className={`${classes.centerChildren} ${classes.margin}`}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.margin}>\n                            Zarejestruj się\n                </Button>\n                    </Grid>\n                </form>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default RegisterScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/not_found/NotFoundScreen.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/firebaseConfig.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/muiTheme.js",["66"],"/Users/krzysztofdziedzic/react/cms-frontend/src/styles/mui/generalStyles.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseErrorsHelper.js",["67"],"export const getRegisterError = errorCode => {\n    if (errorCode == \"auth/email-already-in-use\") return \"Podany email jest zajęty\";\n    return \"Coś poszło nie tak. Spróbuj ponownie\";\n}","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseAuthObserver.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/home/HomeScreen.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/toolbar.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":18,"column":58,"nodeType":"74","messageId":"75","endLine":18,"endColumn":63},{"ruleId":"72","severity":1,"message":"77","line":31,"column":17,"nodeType":"74","messageId":"75","endLine":31,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":58,"column":67,"nodeType":"80","messageId":"81","endLine":58,"endColumn":69},{"ruleId":"78","severity":1,"message":"79","line":87,"column":70,"nodeType":"80","messageId":"81","endLine":87,"endColumn":72},{"ruleId":"78","severity":1,"message":"79","line":117,"column":72,"nodeType":"80","messageId":"81","endLine":117,"endColumn":74},{"ruleId":"72","severity":1,"message":"82","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"83","line":2,"column":19,"nodeType":"80","messageId":"81","endLine":2,"endColumn":21},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'registeredUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'green' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]