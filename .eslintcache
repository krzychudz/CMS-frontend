[{"/Users/krzysztofdziedzic/react/cms-frontend/src/index.js":"1","/Users/krzysztofdziedzic/react/cms-frontend/src/App.js":"2","/Users/krzysztofdziedzic/react/cms-frontend/src/reportWebVitals.js":"3","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/login/LoginScreen.js":"4","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/register/RegisterScreen.js":"5","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/not_found/NotFoundScreen.js":"6","/Users/krzysztofdziedzic/react/cms-frontend/src/firebaseConfig.js":"7","/Users/krzysztofdziedzic/react/cms-frontend/src/muiTheme.js":"8","/Users/krzysztofdziedzic/react/cms-frontend/src/styles/mui/generalStyles.js":"9","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseErrorsHelper.js":"10","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseAuthObserver.js":"11","/Users/krzysztofdziedzic/react/cms-frontend/src/components/toolbar.js":"12","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/productsManagement.js":"13","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/ProductsManagement.js":"14","/Users/krzysztofdziedzic/react/cms-frontend/src/backend/productsRepository.js":"15","/Users/krzysztofdziedzic/react/cms-frontend/src/backendConfig.js":"16","/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productManagementDialog.js":"17","/Users/krzysztofdziedzic/react/cms-frontend/src/components/alert/alerts.js":"18","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/home/HomeScreen.js":"19","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/price/priceHelper.js":"20","/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/confirmationDialog.js":"21","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/image/imageUpload.js":"22","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/styles/productManagementStyles.js":"23","/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productDetailsDialog.js":"24","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/grid/gridColumns.js":"25","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/product_details/ProductDetailsScreen.js":"26"},{"size":500,"mtime":1608574986633,"results":"27","hashOfConfig":"28"},{"size":1686,"mtime":1609365199109,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1608567676926,"results":"30","hashOfConfig":"28"},{"size":5555,"mtime":1608848444712,"results":"31","hashOfConfig":"28"},{"size":7181,"mtime":1608814571625,"results":"32","hashOfConfig":"28"},{"size":110,"mtime":1608641668791,"results":"33","hashOfConfig":"28"},{"size":500,"mtime":1608666520606,"results":"34","hashOfConfig":"28"},{"size":577,"mtime":1609360463535,"results":"35","hashOfConfig":"28"},{"size":713,"mtime":1609253746914,"results":"36","hashOfConfig":"28"},{"size":188,"mtime":1608813290904,"results":"37","hashOfConfig":"28"},{"size":587,"mtime":1609521052906,"results":"38","hashOfConfig":"28"},{"size":4374,"mtime":1609527321493,"results":"39","hashOfConfig":"28"},{"size":611,"mtime":1608913703591,"results":"40","hashOfConfig":"28"},{"size":9252,"mtime":1609360944174,"results":"41","hashOfConfig":"28"},{"size":1451,"mtime":1609525278361,"results":"42","hashOfConfig":"28"},{"size":150,"mtime":1608916459472,"results":"43","hashOfConfig":"28"},{"size":11711,"mtime":1609271072894,"results":"44","hashOfConfig":"28"},{"size":573,"mtime":1609154894319,"results":"45","hashOfConfig":"28"},{"size":3401,"mtime":1609365682740,"results":"46","hashOfConfig":"28"},{"size":82,"mtime":1609095602001,"results":"47","hashOfConfig":"28"},{"size":1348,"mtime":1609166219889,"results":"48","hashOfConfig":"28"},{"size":512,"mtime":1609160582944,"results":"49","hashOfConfig":"28"},{"size":1121,"mtime":1609253818221,"results":"50","hashOfConfig":"28"},{"size":2604,"mtime":1609257081634,"results":"51","hashOfConfig":"28"},{"size":373,"mtime":1609360868068,"results":"52","hashOfConfig":"28"},{"size":7398,"mtime":1609526453527,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1uubitg",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/krzysztofdziedzic/react/cms-frontend/src/index.js",[],["117","118"],"/Users/krzysztofdziedzic/react/cms-frontend/src/App.js",["119"],"import LoginScreen from './screens/login/LoginScreen';\nimport RegisterScreen from './screens/register/RegisterScreen';\nimport HomeScreen from './screens/home/HomeScreen';\nimport ProducstManagement from './screens/products_management/ProductsManagement';\nimport ProductDetailsScreen from './screens/product_details/ProductDetailsScreen';\nimport MainAppBar from './components/toolbar';\nimport mainTheme from './muiTheme';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { onAuthStateChange } from './helpers/firebase/firebaseAuthObserver';\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport NotFoundScreen from './screens/not_found/NotFoundScreen';\n\nfunction App() {\n  \n  useEffect(() => {\n    console.log(\"ello\");\n    const unsubscribe = onAuthStateChange();\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <ThemeProvider theme = { mainTheme }>\n      <Router>\n\n      <MainAppBar />\n\n        <Switch>\n          <Route exact path=\"/register\">\n            <RegisterScreen />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route exact path=\"/products_management\">\n            <ProducstManagement />\n          </Route>\n          <Route exact path=\"/product_details\">\n            <ProductDetailsScreen />\n          </Route>\n          <Route exact path=\"/\">\n            <HomeScreen />\n          </Route>\n          <Route>\n            <NotFoundScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/krzysztofdziedzic/react/cms-frontend/src/reportWebVitals.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/login/LoginScreen.js",["120","121"],"import '../../styles/general/style.css';\nimport Paper from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useForm, Controller } from 'react-hook-form';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport 'firebase/auth';\nimport firebaseApp from '../../firebaseConfig';\n\nfunction LoginScreen() {\n\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const [isInProgress, setProgressVisibility] = useState(false);\n    const [loginError, setLoginError] = useState(\"\");\n    const history = useHistory(); \n\n    const classes = generalStyles();\n\n    const auth = firebaseApp.auth();\n\n    const onLoginClicked = async data => {\n        console.log(data);\n        setProgressVisibility(true);\n        try {\n            const result = await auth.signInWithEmailAndPassword(data.email, data.password);\n            history.replace('/');\n        } catch (error) {\n            setLoginError(error.message);\n        } finally {\n            setProgressVisibility(false);\n        }\n\n    }\n\n    return (\n        <Paper className=\"main_container\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div className=\"header_style\">Logowanie</div>\n                </Grid>\n\n                <form onSubmit={handleSubmit(onLoginClicked)} className={classes.fillMaxWidth}>\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"email\"\n                                as={\n                                    <TextField\n                                        id=\"email\"\n                                        helperText={fieldsErrors.email ? fieldsErrors.email.message : null}\n                                        variant=\"standard\"\n                                        label=\"Email\"\n                                        error={fieldsErrors.email !== undefined}\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    pattern: {\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                        message: 'Niepoprawny email'\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"password\"\n                                as={\n                                    <TextField\n                                        id=\"password\"\n                                        helperText={fieldsErrors.password ? fieldsErrors.password.message : null}\n                                        variant=\"standard\"\n                                        label=\"Hasło\"\n                                        error={fieldsErrors.password !== undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {isInProgress && <CircularProgress />}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {loginError !== \"\" && <div className={\"general_error\"}>{loginError}</div>}\n                    </Grid>\n\n                    <Grid item xs={12} className={`${classes.centerChildren} ${classes.margin}`}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.margin}>\n                            Zaloguj się\n                         </Button>\n                    </Grid>\n\n                    <Grid item xs={12} className=\"centered_grid\">\n                        <div>Jeśli nie masz konta, <Link to=\"/register\" className={\"link\"}> zarejetruj się. </Link></div>\n                    </Grid>\n                </form>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default LoginScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/register/RegisterScreen.js",["122","123","124","125"],"import '../../styles/general/style.css';\nimport Paper from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport { getRegisterError } from '../../helpers/firebase/firebaseErrorsHelper';\nimport { useHistory } from \"react-router-dom\";\n\nimport 'firebase/auth';\nimport firebaseApp from '../../firebaseConfig';\n\nfunction RegisterScreen() {\n\n    const [isInProgress, setProgressVisibility] = useState(false);\n    const [registerError, setRegisterError] = useState(\"\");\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const history = useHistory(); \n\n    const auth = firebaseApp.auth();\n    const classes = generalStyles();\n\n\n    const onRegisteredCliked = async data => {\n        try {\n            setProgressVisibility(true);\n            var registeredUser = await auth.createUserWithEmailAndPassword(data.email, data.password);\n            history.goBack();\n            reset();\n        } catch (error) {\n            setRegisterError(getRegisterError(error.code));\n        }\n        setProgressVisibility(false);\n    }\n\n    return (\n        <Paper className=\"main_container\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div className=\"header_style\">Rejestracja</div>\n                </Grid>\n\n                <form onSubmit={handleSubmit(onRegisteredCliked)} className={classes.fillMaxWidth}>\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"email\"\n                                as={\n                                    <TextField\n                                        id=\"email\"\n                                        helperText={fieldsErrors.email ? fieldsErrors.email.message : null}\n                                        variant=\"standard\"\n                                        label=\"Email\"\n                                        error={fieldsErrors.email != undefined}\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    pattern: {\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                        message: 'Niepoprawny email'\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"password\"\n                                as={\n                                    <TextField\n                                        id=\"password\"\n                                        helperText={fieldsErrors.password ? fieldsErrors.password.message : null}\n                                        variant=\"standard\"\n                                        label=\"Hasło\"\n                                        error={fieldsErrors.password != undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    minLength: {\n                                        value: 4,\n                                        message: \"Podane hasło jest za krótkie\"\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"passwordRe\"\n                                as={\n                                    <TextField\n                                        id=\"passwordRe\"\n                                        helperText={fieldsErrors.passwordRe ? fieldsErrors.passwordRe.message : null}\n                                        variant=\"standard\"\n                                        label=\"Powtórz hasło\"\n                                        error={fieldsErrors.passwordRe != undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    minLength: {\n                                        value: 4,\n                                        message: \"Podane hasło jest za krótkie\"\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {isInProgress && <CircularProgress />}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                            {registerError !== \"\" && <div className={\"general_error\"}>{registerError}</div>}\n                    </Grid>\n\n                    <Grid item xs={12} className={`${classes.centerChildren} ${classes.margin}`}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.margin}>\n                            Zarejestruj się\n                </Button>\n                    </Grid>\n                </form>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default RegisterScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/not_found/NotFoundScreen.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/firebaseConfig.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/muiTheme.js",["126"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst mainTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#BB86FC',\n    },\n    secondary: {\n      main: '#232323',\n    },\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"#BB86FC\",\n        },\n        color: \"#eeeeee\"\n      },\n\n      focused: {}\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 450,\n      md: 500,\n      lg: 900,\n      xl: 1200\n    }\n  },\n});\n\nexport default mainTheme;","/Users/krzysztofdziedzic/react/cms-frontend/src/styles/mui/generalStyles.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseErrorsHelper.js",["127"],"export const getRegisterError = errorCode => {\n    if (errorCode == \"auth/email-already-in-use\") return \"Podany email jest zajęty\";\n    return \"Coś poszło nie tak. Spróbuj ponownie\";\n}","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseAuthObserver.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/toolbar.js",["128"],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/productsManagement.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/ProductsManagement.js",["129","130","131","132","133","134","135","136"],"import { Fab, CircularProgress, GridList, GridListTile, GridListTileBar, ListSubheader, IconButton } from '@material-ui/core';\nimport { Add as AddIcon, Image, Delete as DeleteIcon, Edit as EditIcon } from '@material-ui/icons';\n\nimport ProductManagementDialog from '../../components/dialog/productManagementDialog';\nimport ConfirmationDialog from '../../components/dialog/confirmationDialog';\nimport ProductDetailslDialog from '../../components/dialog/productDetailsDialog';\n\nimport { SuccessSnackbar, showGeneralAlertError } from '../../components/alert/alerts';\nimport { getUsersProducts, removeProduct } from '../../backend/productsRepository';\nimport { useEffect, useState } from 'react';\n\nimport { convertPrice } from '../../helpers/price/priceHelper';\nimport { productManagementStyles } from './styles/productManagementStyles';\nimport { getGridListCols } from '../../helpers/grid/gridColumns';\nimport withWidth from '@material-ui/core/withWidth';\n\nfunction ProducstManagement(props) {\n\n    const classes = productManagementStyles();\n    const [isInProgress, setInProgress] = useState(false);\n    const [showSuccessSnackbar, setShowSuccessSnackbar] = useState(false);\n    const [productsData, setProductsData] = useState(null);\n    const [isDeleteDialogShown, setDeleteDialogShown] = useState();\n    const [productToRemoveId, setProductToRemove] = useState();\n    const [productToDisplay, setProductToDisplay] = useState(null);\n    const [productToEdit, setProductToEdit] = useState(null);\n    const [isProductManagementShown, setProductManagementShown] = useState(false);\n\n    const onProductEditClicked = (element, data) => {\n        element.stopPropagation();\n        setProductToEdit(data);\n        setProductManagementShown(true);\n    }\n\n    const onProductClicked = (element, data) => {\n        element.stopPropagation();\n        setProductToDisplay(data);\n    }\n\n    const onProductAdded = data => {\n        let currentData = productsData;\n        currentData.push(data);\n        setProductsData(currentData);\n        setShowSuccessSnackbar(true);\n    }\n\n    const onProductEdited = data => {\n        let currentData = productsData;\n        let indexToUpdate = currentData.findIndex((item) => item.productId == data.productId);        \n        if (indexToUpdate != -1) {\n            let updatedProduct = currentData[indexToUpdate];\n            updatedProduct.name = data.name;\n            updatedProduct.description = data.description;\n            updatedProduct.price = data.price;\n            updatedProduct.isPublished = data.isPublished;\n            updatedProduct.imageUrl = data.imageUrl;\n            currentData[indexToUpdate] = updatedProduct;\n            setProductsData(currentData);\n        }\n    }\n\n    const performDeleteProduct = (element, productId) => {\n        element.stopPropagation();\n        setProductToRemove(productId);\n        setDeleteDialogShown(true);\n    }\n\n    const deleteProduct = async () => {\n        try {\n            let response = await removeProduct(productToRemoveId);\n            let removedProductId = response.data.removedId;\n            let currentData = productsData;\n            let filteredData = currentData.filter((product) => product.productId != removedProductId);\n            setProductsData(filteredData);\n        } catch (e) {\n            showGeneralAlertError(e.error);\n        } finally {\n            setDeleteDialogShown(false);\n        }\n    }\n\n    const handleClickOpen = () => {\n        setProductManagementShown(true);\n    };\n\n    const handleClose = () => {\n        setProductManagementShown(false);\n        setProductToEdit(null);\n    };\n\n    useEffect(async () => {\n        setInProgress(true);\n        try {\n            let response = await getUsersProducts();\n            setProductsData(response.data);\n        } catch (e) {\n            showGeneralAlertError(e.error);\n        } finally {\n            setInProgress(false);\n        }\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            {productsData == null ? null :\n                (productsData.length === 0)\n                    ? <div className={classes.centerText}>Nie masz zadnych produktów.<br />Aby dodać nowe naciśnij + w prawym dolnym rogu ekranu.</div>\n                    : <GridList cellHeight={180} className={classes.gridList} cols={getGridListCols(props)} spacing={12}>\n\n                        {productsData.filter((product) => product.isPublished).length != 0 &&\n                            <GridListTile key=\"Subheader_published\" cols={getGridListCols(props)} style={{ height: 'auto', background: \"rgba(0, 0, 0, 0.6)\" }} >\n                                <ListSubheader component=\"div\" className={classes.text}>Opublikowane</ListSubheader>\n                            </GridListTile>\n                        }\n                        {productsData.filter((product) => product.isPublished).map((product) => (\n                            <GridListTile key={product.productId} className = {classes.gridItem} onClick = {(e) => onProductClicked(e, product)}>\n                                {product.imageUrl == null\n                                    ? <Image className={classes.imageIcon} />\n                                    : <img src={product.imageUrl} />}\n                                <GridListTileBar\n                                    title={product.name}\n                                    subtitle={convertPrice(product.price)}\n                                    actionIcon={[\n                                        <IconButton className={classes.icon}>\n                                            <EditIcon onClick = {(e) => onProductEditClicked(e, product)} />\n                                        </IconButton>,\n                                        <IconButton className={classes.icon_delete} onClick={(e) => performDeleteProduct(e, product.productId)}>\n                                            <DeleteIcon />\n                                        </IconButton>]\n                                    }\n                                />\n                            </GridListTile>\n                        ))}\n\n                        {productsData.filter((product) => !product.isPublished).length != 0 &&\n                            <GridListTile key=\"Subheader_unpublished\" cols={getGridListCols(props)} style={{ height: 'auto', background: \"rgba(0, 0, 0, 0.6)\" }}  >\n                                <ListSubheader component=\"div\" className={classes.text}>Nieopublikowane</ListSubheader>\n                            </GridListTile>\n                        }\n                        {productsData.filter((product) => !product.isPublished).map((product) => (\n                            <GridListTile key={product.productId} className = {classes.gridItem} onClick = {(e) => onProductClicked(e, product)} >\n                                {product.imageUrl == null\n                                    ? <Image className={classes.imageIcon} />\n                                    : <img src={product.imageUrl} />}\n                                <GridListTileBar\n                                    title={product.name}\n                                    subtitle={convertPrice(product.price)}\n                                    actionIcon={[\n                                        <IconButton className={classes.icon}>\n                                            <EditIcon onClick = {(e) => onProductEditClicked(e, product)} />\n                                        </IconButton>,\n                                        <IconButton className={classes.icon_delete} onClick={(e) => performDeleteProduct(e, product.productId)}>\n                                            <DeleteIcon />\n                                        </IconButton>]\n                                    }\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n            }\n\n\n            <Fab color=\"primary\" className={classes.fab} onClick={handleClickOpen}>\n                <AddIcon />\n            </Fab> \n            {isInProgress &&\n                <div className={classes.centerText}>\n                    <CircularProgress />\n                </div>\n            }\n            <ProductManagementDialog open={isProductManagementShown} handleClose={handleClose} isInEditMode={productToEdit != null} onProductAdded={onProductAdded} onProductEdited={onProductEdited} productData = {productToEdit} />\n            <ConfirmationDialog\n                open={isDeleteDialogShown}\n                title=\"Usuwanie produktu\"\n                description=\"Czy na pewno chcesz usunąć ten produkt?\"\n                negativeButton=\"Nie\"\n                positiveButton=\"Tak\"\n                negativeButtonCallback={() => setDeleteDialogShown(false)}\n                positiveButtonCallback={deleteProduct} />\n            <SuccessSnackbar open={showSuccessSnackbar} onClose={() => setShowSuccessSnackbar(false)} alertText=\"Produkt został pomyślnie dodany!\" />\n            <ProductDetailslDialog open = {productToDisplay != null} handleClose = {() => setProductToDisplay(null)} product = {productToDisplay} isPreviewMode = {true} />\n        </div>\n    );\n}\n\nexport default withWidth()(ProducstManagement);","/Users/krzysztofdziedzic/react/cms-frontend/src/backend/productsRepository.js",["137","138","139","140","141","142"],"/Users/krzysztofdziedzic/react/cms-frontend/src/backendConfig.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productManagementDialog.js",["143","144","145"],"import { Dialog, DialogContent, Button, Slide, AppBar, Toolbar, Typography, FormControl, Box, TextField, CircularProgress, IconButton, FormControlLabel, Grid, Switch } from '@material-ui/core';\nimport { Close as CloseIcon, Image } from '@material-ui/icons';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { forwardRef, useEffect, useState, useRef } from 'react';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport { showGeneralAlertError } from '../alert/alerts';\n\nimport { addProduct, editProduct } from '../../backend/productsRepository';\nimport { uploadImageToFirebaseStorage } from '../../helpers/firebase/image/imageUpload';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    dialog: {\n        background: '#232323',\n    },\n    container: {\n        padding: '16px',\n        width: '100%'\n    },\n    margin: {\n        margin: '16px',\n        width: \"100%\"\n    },\n    imageLoader: {\n        margin: '22px 0 0 0'\n    },\n    imageIcon: {\n        color: \"white\",\n        width: \"120px\",\n        height: \"120px\",\n        padding: \"6px\"\n    }\n}));\n\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n}\n\nfunction ProductManagementDialog(props) {\n\n    const { productData, isInEditMode, open } = props;\n\n    const classes = useStyles();\n    const styles = generalStyles();\n\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const [isPublished, setIsPublished] = useState(false);\n    const [imageUrl, setImageUrl] = useState(null);\n    const [isInProgress, setInProgress] = useState(false);\n    const prevVisibility = usePrevious(open);\n\n    useEffect(() => {\n        if (open && !prevVisibility) {\n           if (productData != null) {\n               setIsPublished(productData.isPublished);\n               setImageUrl(productData.imageUrl);\n           }\n        }\n      }, [open, prevVisibility]);\n    \n\n    const clearDialogData = () => {\n        setImageUrl(null);\n        setIsPublished(false);\n    }\n\n    const clearAndClose = () => {\n        clearDialogData();\n        props.handleClose();\n    }\n\n    const manageProduct = async data => {\n        try {\n            setInProgress(true);\n\n            let body = {\n                name: data.name,\n                description: data.description,\n                price: data.price,\n                isPublished: isPublished,\n                imageUrl: imageUrl\n            }\n\n            let response = isInEditMode ? await editProduct(productData.productId, body) : await addProduct(body);\n\n            clearDialogData();\n            if (isInEditMode) {\n                props.onProductEdited(response.data);\n            } else {\n                props.onProductAdded(response.data);\n            }\n            props.handleClose();\n        } catch (e) {\n            showGeneralAlertError(e.error);\n        } finally {\n            setInProgress(false);\n        }\n    }\n\n    const handleSwitchStateChange = () => {\n        setIsPublished(!isPublished);\n    }\n\n    const handleFileUpload = async (e) => {\n        try {\n            setImageUrl(\"\");\n            const image = e.target.files[0];\n            let imageUrl = await uploadImageToFirebaseStorage(image);\n            setImageUrl(imageUrl);\n        } catch (e) {\n            onImageFetchedError(e.error);\n        }\n    }\n\n    const onImageFetchedError = (e) => {\n        setImageUrl(null);\n        showGeneralAlertError(e.error);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={clearAndClose}\n            fullScreen\n            TransitionComponent={Transition}>\n\n            <AppBar className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={clearAndClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {isInEditMode ? \"Edytuj Produkt\" : \"Dodaj nowy produkt\"}\n                    </Typography>\n                    <Button autoFocus color=\"inherit\" onClick={handleSubmit(manageProduct)}>\n                        {isInEditMode ? \"Zapisz\" : \"Dodaj\"}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <DialogContent className={classes.dialog}>\n                <Grid container spacing={3} className={classes.container} justify=\"center\">\n\n                    <ImageUploader imageUrl={imageUrl} handleFileUpload={handleFileUpload} styles={styles} classes={classes} />\n\n                    <Grid item xs={6}>\n                        <form onSubmit={handleSubmit(manageProduct)}>\n                            <Grid item xs={12}>\n                                <FormControl className={classes.margin} variant=\"standard\">\n                                    <Controller\n                                        name=\"name\"\n                                        as={\n                                            <TextField\n                                                id=\"name\"\n                                                helperText={fieldsErrors.name ? fieldsErrors.name.message : null}\n                                                variant=\"standard\"\n                                                label=\"Nazwa\"\n                                                error={fieldsErrors.name !== undefined}\n                                                InputProps={{\n                                                    className: styles.input\n                                                }} />\n                                        }\n                                        control={control}\n                                        defaultValue= {productData == null ? \"\" : productData.name}\n                                        rules={{\n                                            required: 'Pole wymagane',\n                                        }}\n                                    />\n                                </FormControl>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControl className={classes.margin} variant=\"standard\">\n                                    <Controller\n                                        name=\"price\"\n                                        as={\n                                            <TextField\n                                                id=\"price\"\n                                                helperText={fieldsErrors.price ? fieldsErrors.price.message : null}\n                                                variant=\"standard\"\n                                                label=\"Cena\"\n                                                error={fieldsErrors.price !== undefined}\n                                                InputProps={{\n                                                    className: styles.input\n                                                }}\n                                            />\n                                        }\n                                        control={control}\n                                        defaultValue= {productData == null ? \"\" : productData.price}\n                                        rules={{\n                                            required: 'Pole wymagane',\n                                        }}\n                                    />\n                                </FormControl>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControl className={classes.margin} variant=\"standard\">\n                                    <Controller\n                                        name=\"description\"\n                                        as={\n                                            <TextField\n                                                id=\"description\"\n                                                helperText={fieldsErrors.description ? fieldsErrors.description.message : null}\n                                                variant=\"standard\"\n                                                label=\"Opis\"\n                                                error={fieldsErrors.description !== undefined}\n                                                multiline\n                                                InputProps={{\n                                                    className: styles.input\n                                                }}\n                                            />\n                                        }\n                                        control={control}\n                                        defaultValue= {productData == null ? \"\" : productData.description}\n                                        rules={{\n                                            required: 'Pole wymagane',\n                                        }}\n                                    />\n                                </FormControl>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    className={`${classes.margin} ${styles.text}`}\n                                    control={\n                                        <Switch\n                                            color=\"primary\"\n                                            checked={isPublished}\n                                            onClick={handleSwitchStateChange}\n                                            name=\"isPublished\"\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />}\n                                    label=\"Czy opublikować?\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} className={`${styles.margin} ${styles.centerChildren}`}>\n                                {isInProgress && <CircularProgress />}\n                            </Grid>\n\n                        </form>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        \n        </Dialog>\n    );\n}\n\nfunction ImageUploader(props) {\n    const { imageUrl } = props;\n    const { classes } = props;\n    const { styles } = props;\n\n    return (\n        <Grid container className={classes.imageLoader} justify=\"center\">\n            <Grid item xs={12} sm={3} md={2} className={styles.centerChildren}>\n                {imageUrl === null\n                    ? <Image className={classes.imageIcon} />\n                    : imageUrl === \"\" ? <Box className={`${classes.imageIcon} ${styles.centerChildrenVertically}`}> <CircularProgress /> </Box>\n                        : <img className={classes.imageIcon} src={imageUrl} />}\n            </Grid>\n            <Grid item xs={12} sm={3} md={2} className={styles.centerChildrenVertically}>\n                <Button\n                    variant=\"contained\"\n                    component=\"label\"\n                    color=\"primary\">\n                    Dodaj zdjęcie\n                        <input type=\"file\" hidden onChange={props.handleFileUpload}/>\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ProductManagementDialog;","/Users/krzysztofdziedzic/react/cms-frontend/src/components/alert/alerts.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/home/HomeScreen.js",["146","147"],"import { CircularProgress, GridList, GridListTile, GridListTileBar, ListSubheader } from '@material-ui/core';\nimport { Image } from '@material-ui/icons';\n\nimport ProductDetailslDialog from '../../components/dialog/productDetailsDialog';\n\nimport { getAllProducts } from '../../backend/productsRepository';\nimport { useEffect, useState } from 'react';\n\nimport { convertPrice } from '../../helpers/price/priceHelper';\nimport { productManagementStyles } from '../products_management/styles/productManagementStyles';\nimport { showGeneralAlertError } from '../../components/alert/alerts';\nimport { getGridListCols } from '../../helpers/grid/gridColumns';\nimport { useHistory } from \"react-router-dom\";\nimport withWidth from '@material-ui/core/withWidth';\n\n\n\nfunction HomeScreen(props) {\n\n    const classes = productManagementStyles();\n    const [isInProgress, setInProgress] = useState(false);\n    const [productsData, setProductsData] = useState(null);\n    const [productToDisplay, setProductToDisplay] = useState(null);\n\n    const history = useHistory(); \n\n    useEffect(async () => {\n        setInProgress(true);\n        try {\n            let response = await getAllProducts();\n            console.log(response.data);\n            setProductsData(response.data);\n        } catch (e) {\n            showGeneralAlertError(e.error);\n        } finally {\n            setInProgress(false);\n        }\n    }, []);\n\n    const onProductClicked = data => {\n        //setProductToDisplay(data);\n        history.push('/product_details', {\n            product: data\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n\n            {productsData == null ? null :\n                (productsData.length === 0)\n                    ? <div className={classes.centerText}>Brak produktów do wyświetlenia.</div>\n                    : <GridList cellHeight={180} className={classes.gridList} cols={getGridListCols(props)} spacing={12}>\n\n\n                        <GridListTile key=\"Subheader_all_products\" cols={getGridListCols(props)} style={{ height: 'auto', background: \"rgba(0, 0, 0, 0.6)\" }} >\n                            <ListSubheader component=\"div\" className={classes.text}>Produkty</ListSubheader>\n                        </GridListTile>\n\n                        {productsData.filter((product) => product.isPublished).map((product) => (\n                            <GridListTile key={product.productId} className={classes.gridItem} onClick={() => onProductClicked(product)}>\n                                {product.imageUrl == null\n                                    ? <Image className={classes.imageIcon} />\n                                    : <img src={product.imageUrl} />}\n                                <GridListTileBar\n                                    title={product.name}\n                                    subtitle={convertPrice(product.price)}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n            }\n            {isInProgress &&\n                <div className={classes.centerText}>\n                    <CircularProgress />\n                </div>\n            }\n            <ProductDetailslDialog open={productToDisplay != null} handleClose={() => setProductToDisplay(null)} product={productToDisplay} isPreviewMode={true} />\n        </div>\n    );\n}\n\nexport default withWidth()(HomeScreen);","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/price/priceHelper.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/confirmationDialog.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/image/imageUpload.js",["148"],"import 'firebase/storage';\nimport firebaseApp from '../../../firebaseConfig';\n\nexport const uploadImageToFirebaseStorage = async (image) => {\n    if (!image) return;\n    const storage = firebaseApp.storage();\n    const fileName = `${Date.now()}_${image.name}}`;\n    try {\n        await storage.ref(`images/${fileName}`).put(image);\n        return await storage.ref('images').child(`${fileName}`).getDownloadURL();\n    } catch (e) {\n        console.log(\"postReturn33\");\n        throw ({'error': e.error});\n    }\n}","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/styles/productManagementStyles.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productDetailsDialog.js",["149"],"import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@material-ui/core';\nimport { Image } from '@material-ui/icons';\n\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport { convertPrice } from '../../helpers/price/priceHelper';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const dialogStyles = makeStyles({\n    dialogTitle: {\n        padding: 0\n    },\n    dialogProductInfo: {\n        padding: '16px'\n    },\n    dialogProductImage: {\n        maxWidth: '100%'\n    }\n});\n\nfunction ProductDetailslDialog(props) {\n    const styles = generalStyles();\n    const classes = dialogStyles();\n    const { product } = props;\n\n    if (product == null) return (<div></div>);\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            scroll=\"paper\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"#121212\",\n                },\n            }}>\n            <DialogTitle className={`${classes.dialogTitle}`}>\n                <Grid container alignItems=\"center\">\n                    <Grid item xs={4}>\n                        {product.imageUrl == null\n                            ? <Image className={styles.dialogImage} />\n                            : <img src={product.imageUrl} className={classes.dialogProductImage} />}\n                    </Grid>\n                    <Grid item xs={8} className={`${styles.text} ${classes.dialogProductInfo}`}>\n                        <Grid item xs={12}> <b>Nazwa:</b> {product.name} </Grid>\n                        <Grid item xs={12}> <b>Cena:</b> {convertPrice(product.price)} </Grid>\n                    </Grid>\n                </Grid>\n            </DialogTitle>\n\n            <DialogContent className={styles.text}>\n\n                <DialogContentText\n                    id=\"scroll-dialog-description\"\n                    className={styles.text}\n                    tabIndex={-1}>\n                    <div className={styles.text}>\n                        {product.description}\n                    </div>\n                </DialogContentText>\n            </DialogContent>\n\n            {props.isPreviewMode ? null :\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dodaj do koszyka\n                </Button>\n                </DialogActions>\n            }\n        </Dialog>\n\n    );\n}\n\nexport default ProductDetailslDialog;","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/grid/gridColumns.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/product_details/ProductDetailsScreen.js",["150","151","152","153","154","155","156","157","158","159","160","161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":20},{"ruleId":"167","severity":1,"message":"171","line":19,"column":58,"nodeType":"169","messageId":"170","endLine":19,"endColumn":63},{"ruleId":"167","severity":1,"message":"172","line":32,"column":19,"nodeType":"169","messageId":"170","endLine":32,"endColumn":25},{"ruleId":"167","severity":1,"message":"173","line":31,"column":17,"nodeType":"169","messageId":"170","endLine":31,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":58,"column":67,"nodeType":"176","messageId":"177","endLine":58,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":87,"column":70,"nodeType":"176","messageId":"177","endLine":87,"endColumn":72},{"ruleId":"174","severity":1,"message":"175","line":117,"column":72,"nodeType":"176","messageId":"177","endLine":117,"endColumn":74},{"ruleId":"167","severity":1,"message":"178","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"179","line":2,"column":19,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":69,"column":8,"nodeType":"182","endLine":69,"endColumn":10,"suggestions":"183"},{"ruleId":"174","severity":1,"message":"179","line":49,"column":76,"nodeType":"176","messageId":"177","endLine":49,"endColumn":78},{"ruleId":"174","severity":1,"message":"175","line":50,"column":27,"nodeType":"176","messageId":"177","endLine":50,"endColumn":29},{"ruleId":"174","severity":1,"message":"175","line":73,"column":82,"nodeType":"176","messageId":"177","endLine":73,"endColumn":84},{"ruleId":"180","severity":1,"message":"184","line":91,"column":15,"nodeType":"185","endLine":101,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":110,"column":87,"nodeType":"176","messageId":"177","endLine":110,"endColumn":89},{"ruleId":"186","severity":1,"message":"187","line":119,"column":39,"nodeType":"188","endLine":119,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":135,"column":88,"nodeType":"176","messageId":"177","endLine":135,"endColumn":90},{"ruleId":"186","severity":1,"message":"187","line":144,"column":39,"nodeType":"188","endLine":144,"endColumn":69},{"ruleId":"189","severity":1,"message":"190","line":9,"column":9,"nodeType":"191","messageId":"192","endLine":9,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":18,"column":9,"nodeType":"191","messageId":"192","endLine":18,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":27,"column":9,"nodeType":"191","messageId":"192","endLine":27,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":36,"column":9,"nodeType":"191","messageId":"192","endLine":36,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":45,"column":9,"nodeType":"191","messageId":"192","endLine":45,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":54,"column":9,"nodeType":"191","messageId":"192","endLine":54,"endColumn":34},{"ruleId":"167","severity":1,"message":"171","line":63,"column":58,"nodeType":"169","messageId":"170","endLine":63,"endColumn":63},{"ruleId":"180","severity":1,"message":"193","line":76,"column":10,"nodeType":"182","endLine":76,"endColumn":32,"suggestions":"194"},{"ruleId":"186","severity":1,"message":"187","line":278,"column":27,"nodeType":"188","endLine":278,"endColumn":79},{"ruleId":"180","severity":1,"message":"184","line":27,"column":15,"nodeType":"185","endLine":38,"endColumn":6},{"ruleId":"186","severity":1,"message":"187","line":64,"column":39,"nodeType":"188","endLine":64,"endColumn":69},{"ruleId":"189","severity":1,"message":"190","line":13,"column":9,"nodeType":"191","messageId":"192","endLine":13,"endColumn":36},{"ruleId":"186","severity":1,"message":"187","line":45,"column":31,"nodeType":"188","endLine":45,"endColumn":100},{"ruleId":"167","severity":1,"message":"195","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":16},{"ruleId":"167","severity":1,"message":"196","line":1,"column":18,"nodeType":"169","messageId":"170","endLine":1,"endColumn":31},{"ruleId":"167","severity":1,"message":"197","line":1,"column":41,"nodeType":"169","messageId":"170","endLine":1,"endColumn":46},{"ruleId":"167","severity":1,"message":"198","line":1,"column":48,"nodeType":"169","messageId":"170","endLine":1,"endColumn":54},{"ruleId":"167","severity":1,"message":"199","line":1,"column":56,"nodeType":"169","messageId":"170","endLine":1,"endColumn":63},{"ruleId":"167","severity":1,"message":"200","line":1,"column":65,"nodeType":"169","messageId":"170","endLine":1,"endColumn":75},{"ruleId":"167","severity":1,"message":"201","line":1,"column":90,"nodeType":"169","messageId":"170","endLine":1,"endColumn":93},{"ruleId":"167","severity":1,"message":"202","line":1,"column":124,"nodeType":"169","messageId":"170","endLine":1,"endColumn":134},{"ruleId":"167","severity":1,"message":"203","line":1,"column":136,"nodeType":"169","messageId":"170","endLine":1,"endColumn":152},{"ruleId":"167","severity":1,"message":"204","line":1,"column":160,"nodeType":"169","messageId":"170","endLine":1,"endColumn":166},{"ruleId":"186","severity":1,"message":"187","line":70,"column":23,"nodeType":"188","endLine":70,"endColumn":57},{"ruleId":"205","severity":1,"message":"206","line":89,"column":87,"nodeType":"207","endLine":89,"endColumn":134},{"ruleId":"205","severity":1,"message":"206","line":113,"column":87,"nodeType":"207","endLine":113,"endColumn":134},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'result' is assigned a value but never used.","'registeredUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'green' is defined but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["210"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has a missing dependency: 'productData'. Either include it or remove the dependency array.",["211"],"'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'Slide' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [history]",{"range":"216","text":"217"},"Update the dependencies array to be: [open, prevVisibility, productData]",{"range":"218","text":"219"},[2011,2013],"[history]",[2230,2252],"[open, prevVisibility, productData]"]