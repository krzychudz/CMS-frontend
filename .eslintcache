[{"/Users/krzysztofdziedzic/react/cms-frontend/src/index.js":"1","/Users/krzysztofdziedzic/react/cms-frontend/src/App.js":"2","/Users/krzysztofdziedzic/react/cms-frontend/src/reportWebVitals.js":"3","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/login/LoginScreen.js":"4","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/register/RegisterScreen.js":"5","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/not_found/NotFoundScreen.js":"6","/Users/krzysztofdziedzic/react/cms-frontend/src/firebaseConfig.js":"7","/Users/krzysztofdziedzic/react/cms-frontend/src/muiTheme.js":"8","/Users/krzysztofdziedzic/react/cms-frontend/src/styles/mui/generalStyles.js":"9","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseErrorsHelper.js":"10","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseAuthObserver.js":"11","/Users/krzysztofdziedzic/react/cms-frontend/src/components/toolbar.js":"12","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/productsManagement.js":"13","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/ProductsManagement.js":"14","/Users/krzysztofdziedzic/react/cms-frontend/src/backend/productsRepository.js":"15","/Users/krzysztofdziedzic/react/cms-frontend/src/backendConfig.js":"16","/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productManagementDialog.js":"17","/Users/krzysztofdziedzic/react/cms-frontend/src/components/alert/alerts.js":"18","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/home/HomeScreen.js":"19","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/price/priceHelper.js":"20","/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/confirmationDialog.js":"21","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/image/imageUpload.js":"22","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/styles/productManagementStyles.js":"23","/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productDetailsDialog.js":"24"},{"size":500,"mtime":1608574986633,"results":"25","hashOfConfig":"26"},{"size":1499,"mtime":1609261786277,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1608567676926,"results":"28","hashOfConfig":"26"},{"size":5555,"mtime":1608848444712,"results":"29","hashOfConfig":"26"},{"size":7181,"mtime":1608814571625,"results":"30","hashOfConfig":"26"},{"size":110,"mtime":1608641668791,"results":"31","hashOfConfig":"26"},{"size":500,"mtime":1608666520606,"results":"32","hashOfConfig":"26"},{"size":546,"mtime":1608840101132,"results":"33","hashOfConfig":"26"},{"size":713,"mtime":1609253746914,"results":"34","hashOfConfig":"26"},{"size":188,"mtime":1608813290904,"results":"35","hashOfConfig":"26"},{"size":476,"mtime":1608990572971,"results":"36","hashOfConfig":"26"},{"size":3991,"mtime":1609085993903,"results":"37","hashOfConfig":"26"},{"size":611,"mtime":1608913703591,"results":"38","hashOfConfig":"26"},{"size":8889,"mtime":1609271828289,"results":"39","hashOfConfig":"26"},{"size":1229,"mtime":1609267839936,"results":"40","hashOfConfig":"26"},{"size":150,"mtime":1608916459472,"results":"41","hashOfConfig":"26"},{"size":11711,"mtime":1609271072894,"results":"42","hashOfConfig":"26"},{"size":573,"mtime":1609154894319,"results":"43","hashOfConfig":"26"},{"size":3063,"mtime":1609258666682,"results":"44","hashOfConfig":"26"},{"size":82,"mtime":1609095602001,"results":"45","hashOfConfig":"26"},{"size":1348,"mtime":1609166219889,"results":"46","hashOfConfig":"26"},{"size":512,"mtime":1609160582944,"results":"47","hashOfConfig":"26"},{"size":1121,"mtime":1609253818221,"results":"48","hashOfConfig":"26"},{"size":2604,"mtime":1609257081634,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1uubitg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"/Users/krzysztofdziedzic/react/cms-frontend/src/index.js",[],["109","110"],"/Users/krzysztofdziedzic/react/cms-frontend/src/App.js",["111"],"import LoginScreen from './screens/login/LoginScreen';\nimport RegisterScreen from './screens/register/RegisterScreen';\nimport HomeScreen from './screens/home/HomeScreen';\nimport ProducstManagement from './screens/products_management/ProductsManagement';\nimport MainAppBar from './components/toolbar';\nimport mainTheme from './muiTheme';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { onAuthStateChange } from './helpers/firebase/firebaseAuthObserver';\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport NotFoundScreen from './screens/not_found/NotFoundScreen';\n\nfunction App() {\n  \n  useEffect(() => {\n    console.log(\"ello\");\n    const unsubscribe = onAuthStateChange();\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <ThemeProvider theme = { mainTheme }>\n      <Router>\n\n      <MainAppBar />\n\n        <Switch>\n          <Route exact path=\"/register\">\n            <RegisterScreen />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route exact path=\"/products_management\">\n            <ProducstManagement />\n          </Route>\n          <Route exact path=\"/\">\n            <HomeScreen />\n          </Route>\n          <Route>\n            <NotFoundScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/krzysztofdziedzic/react/cms-frontend/src/reportWebVitals.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/login/LoginScreen.js",["112","113"],"import '../../styles/general/style.css';\nimport Paper from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useForm, Controller } from 'react-hook-form';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport 'firebase/auth';\nimport firebaseApp from '../../firebaseConfig';\n\nfunction LoginScreen() {\n\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const [isInProgress, setProgressVisibility] = useState(false);\n    const [loginError, setLoginError] = useState(\"\");\n    const history = useHistory(); \n\n    const classes = generalStyles();\n\n    const auth = firebaseApp.auth();\n\n    const onLoginClicked = async data => {\n        console.log(data);\n        setProgressVisibility(true);\n        try {\n            const result = await auth.signInWithEmailAndPassword(data.email, data.password);\n            history.replace('/');\n        } catch (error) {\n            setLoginError(error.message);\n        } finally {\n            setProgressVisibility(false);\n        }\n\n    }\n\n    return (\n        <Paper className=\"main_container\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div className=\"header_style\">Logowanie</div>\n                </Grid>\n\n                <form onSubmit={handleSubmit(onLoginClicked)} className={classes.fillMaxWidth}>\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"email\"\n                                as={\n                                    <TextField\n                                        id=\"email\"\n                                        helperText={fieldsErrors.email ? fieldsErrors.email.message : null}\n                                        variant=\"standard\"\n                                        label=\"Email\"\n                                        error={fieldsErrors.email !== undefined}\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    pattern: {\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                        message: 'Niepoprawny email'\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"password\"\n                                as={\n                                    <TextField\n                                        id=\"password\"\n                                        helperText={fieldsErrors.password ? fieldsErrors.password.message : null}\n                                        variant=\"standard\"\n                                        label=\"Hasło\"\n                                        error={fieldsErrors.password !== undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {isInProgress && <CircularProgress />}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {loginError !== \"\" && <div className={\"general_error\"}>{loginError}</div>}\n                    </Grid>\n\n                    <Grid item xs={12} className={`${classes.centerChildren} ${classes.margin}`}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.margin}>\n                            Zaloguj się\n                         </Button>\n                    </Grid>\n\n                    <Grid item xs={12} className=\"centered_grid\">\n                        <div>Jeśli nie masz konta, <Link to=\"/register\" className={\"link\"}> zarejetruj się. </Link></div>\n                    </Grid>\n                </form>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default LoginScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/register/RegisterScreen.js",["114","115","116","117"],"import '../../styles/general/style.css';\nimport Paper from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport { getRegisterError } from '../../helpers/firebase/firebaseErrorsHelper';\nimport { useHistory } from \"react-router-dom\";\n\nimport 'firebase/auth';\nimport firebaseApp from '../../firebaseConfig';\n\nfunction RegisterScreen() {\n\n    const [isInProgress, setProgressVisibility] = useState(false);\n    const [registerError, setRegisterError] = useState(\"\");\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\n    const history = useHistory(); \n\n    const auth = firebaseApp.auth();\n    const classes = generalStyles();\n\n\n    const onRegisteredCliked = async data => {\n        try {\n            setProgressVisibility(true);\n            var registeredUser = await auth.createUserWithEmailAndPassword(data.email, data.password);\n            history.goBack();\n            reset();\n        } catch (error) {\n            setRegisterError(getRegisterError(error.code));\n        }\n        setProgressVisibility(false);\n    }\n\n    return (\n        <Paper className=\"main_container\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div className=\"header_style\">Rejestracja</div>\n                </Grid>\n\n                <form onSubmit={handleSubmit(onRegisteredCliked)} className={classes.fillMaxWidth}>\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"email\"\n                                as={\n                                    <TextField\n                                        id=\"email\"\n                                        helperText={fieldsErrors.email ? fieldsErrors.email.message : null}\n                                        variant=\"standard\"\n                                        label=\"Email\"\n                                        error={fieldsErrors.email != undefined}\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    pattern: {\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                        message: 'Niepoprawny email'\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"password\"\n                                as={\n                                    <TextField\n                                        id=\"password\"\n                                        helperText={fieldsErrors.password ? fieldsErrors.password.message : null}\n                                        variant=\"standard\"\n                                        label=\"Hasło\"\n                                        error={fieldsErrors.password != undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    minLength: {\n                                        value: 4,\n                                        message: \"Podane hasło jest za krótkie\"\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        <FormControl className={classes.margin} variant=\"standard\">\n                            <Controller\n                                name=\"passwordRe\"\n                                as={\n                                    <TextField\n                                        id=\"passwordRe\"\n                                        helperText={fieldsErrors.passwordRe ? fieldsErrors.passwordRe.message : null}\n                                        variant=\"standard\"\n                                        label=\"Powtórz hasło\"\n                                        error={fieldsErrors.passwordRe != undefined}\n                                        type=\"password\"\n                                        InputProps={{\n                                            className: classes.input\n                                        }}\n                                    />\n                                }\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Pole wymagane',\n                                    minLength: {\n                                        value: 4,\n                                        message: \"Podane hasło jest za krótkie\"\n                                    }\n                                }}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                        {isInProgress && <CircularProgress />}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.centerChildren}>\n                            {registerError !== \"\" && <div className={\"general_error\"}>{registerError}</div>}\n                    </Grid>\n\n                    <Grid item xs={12} className={`${classes.centerChildren} ${classes.margin}`}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.margin}>\n                            Zarejestruj się\n                </Button>\n                    </Grid>\n                </form>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default RegisterScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/not_found/NotFoundScreen.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/firebaseConfig.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/muiTheme.js",["118"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst mainTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#BB86FC',\n        },\n        secondary: {\n            main: '#232323',\n        },\n    },\n    overrides: {\n        MuiFormLabel: {\n          root: {\n            \"&$focused\": {\n              color: \"#BB86FC\",\n            },\n            color: \"#eeeeee\"\n          }, \n          \n          focused: {}\n        }\n      }\n});\n\nexport default mainTheme;","/Users/krzysztofdziedzic/react/cms-frontend/src/styles/mui/generalStyles.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseErrorsHelper.js",["119"],"export const getRegisterError = errorCode => {\n    if (errorCode == \"auth/email-already-in-use\") return \"Podany email jest zajęty\";\n    return \"Coś poszło nie tak. Spróbuj ponownie\";\n}","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/firebaseAuthObserver.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/toolbar.js",["120"],"import React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { withRouter } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport 'firebase/auth';\nimport firebaseApp from '../firebaseConfig';\n\nconst auth = firebaseApp.auth();\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        flexGrow: 1,\n        textAlign: 'start'\n    },\n}));\n\n\nconst MainAppBar = withRouter(({ history }) => {\n\n    const classes = useStyles();\n    const [shouldDisplayLoginButton, setLoginButtonVisibility] = useState(true);\n    const [isUserLoggedIn, setUserLoggedIn] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    }\n\n    const handleProfileClick = () => {\n        history.replace('/products_management')\n        setAnchorEl(null);\n    };\n\n    const handleLogout = async () => {\n        try {\n            await auth.signOut();\n            setAnchorEl(null);\n            history.replace('/');\n        } catch (error) {\n            alert(\"Coś poszło nie tak, spróbuj ponowanie!\");\n        }\n    }\n\n    useEffect(() => {\n        const unsubscribe = history.listen((location, action) => {\n            setLoginButtonVisibility(location.pathname !== '/login' && location.pathname !== '/register')\n        });\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                setUserLoggedIn(true);\n            } else {\n                setUserLoggedIn(false);\n            }\n        });\n        return () => {\n            unsubscribe();\n        }\n    });\n\n\n\n    return (\n\n        <AppBar position=\"sticky\" color=\"secondary\">\n            <Toolbar>\n                <Button color=\"inherit\" onClick={() => history.replace('/')} >Home</Button>\n\n                <Box className={classes.title}> </Box>\n                {shouldDisplayLoginButton ?\n                    isUserLoggedIn\n                        ? [<IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            color=\"inherit\"\n                            onClick={handleMenu}>\n                            <AccountCircle />\n                        </IconButton>,\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleMenuClose}>\n                            <MenuItem onClick={handleProfileClick}>Moje konto</MenuItem>\n                            <MenuItem onClick={handleLogout}>Wyloguj</MenuItem>\n                        </Menu>\n                        ]\n                        : <Button color=\"inherit\" onClick={() => history.push('/login')} >Zaloguj się</Button>\n                    : null\n                }\n\n            </Toolbar>\n        </AppBar>\n    )\n});\n\nexport default MainAppBar;","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/productsManagement.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/ProductsManagement.js",["121","122","123","124","125","126","127","128"],"/Users/krzysztofdziedzic/react/cms-frontend/src/backend/productsRepository.js",["129","130","131","132","133"],"import { baseUrl } from '../backendConfig';\nimport axios from \"axios\";\n\nexport const getUsersProducts = async () => {\n    try {\n        let responseData = await axios.get(`${baseUrl}users/products`)\n        return responseData;\n    } catch (error) {\n        throw ({ 'error': error });\n    }\n}\n\nexport const addProduct = async (body) => {\n    try {\n        let responseData = await axios.post(`${baseUrl}users/products`, body);\n        return responseData;\n    } catch (error) {\n        throw ({'error': error});\n    }\n}\n\nexport const removeProduct = async (productId) => {\n    try {\n        let responseData = await axios.delete(`${baseUrl}users/products/${productId}`)\n        return responseData;\n    } catch (error) {\n        throw ({'error': error});\n    }\n}\n\nexport const getAllProducts = async () => {\n    try {\n        let responseData = await axios.get(`${baseUrl}products`)\n        return responseData;\n    } catch (error) {\n        throw ({'error': error});\n    }\n}\n\nexport const editProduct = async (productId, body) => {\n    try {\n        let responseData = await axios.patch(`${baseUrl}users/products/${productId}`, body);\n        return responseData;\n    } catch (error) {\n        throw ({'error': error});\n    }\n}","/Users/krzysztofdziedzic/react/cms-frontend/src/backendConfig.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productManagementDialog.js",["134","135","136"],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/alert/alerts.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/screens/home/HomeScreen.js",["137","138"],"import { CircularProgress, GridList, GridListTile, GridListTileBar, ListSubheader } from '@material-ui/core';\nimport { Image } from '@material-ui/icons';\n\nimport ProductDetailslDialog from '../../components/dialog/productDetailsDialog';\n\nimport { getAllProducts } from '../../backend/productsRepository';\nimport { useEffect, useState } from 'react';\n\nimport { convertPrice } from '../../helpers/price/priceHelper';\nimport { productManagementStyles } from '../products_management/styles/productManagementStyles';\nimport { showGeneralAlertError } from '../../components/alert/alerts';\n\nfunction HomeScreen() {\n\n    const classes = productManagementStyles();\n    const [isInProgress, setInProgress] = useState(false);\n    const [productsData, setProductsData] = useState(null);\n    const [productToDisplay, setProductToDisplay] = useState(null);\n\n    useEffect(async () => {\n        setInProgress(true);\n        try {\n            let response = await getAllProducts();\n            console.log(response.data);\n            setProductsData(response.data);\n        } catch (e) {\n            showGeneralAlertError(e.error);\n        } finally {\n            setInProgress(false);\n        }\n    }, []);\n\n    const onProductClicked = data => {\n        setProductToDisplay(data);\n    }\n\n    return (\n        <div className={classes.root}>\n\n            {productsData == null ? null :\n                (productsData.length === 0)\n                    ? <div className={classes.centerText}>Brak produktów do wyświetlenia.</div>\n                    : <GridList cellHeight={180} className={classes.gridList} cols={3} spacing={12}>\n\n\n                        <GridListTile key=\"Subheader_all_products\" cols={3} style={{ height: 'auto', background: \"rgba(0, 0, 0, 0.6)\" }} >\n                            <ListSubheader component=\"div\" className={classes.text}>Produkty</ListSubheader>\n                        </GridListTile>\n\n                        {productsData.filter((product) => product.isPublished).map((product) => (\n                            <GridListTile key={product.productId} className={classes.gridItem} onClick={() => onProductClicked(product)}>\n                                {product.imageUrl == null\n                                    ? <Image className={classes.imageIcon} />\n                                    : <img src={product.imageUrl} />}\n                                <GridListTileBar\n                                    title={product.name}\n                                    subtitle={convertPrice(product.price)}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n            }\n            {isInProgress &&\n                <div className={classes.centerText}>\n                    <CircularProgress />\n                </div>\n            }\n            <ProductDetailslDialog open = {productToDisplay != null} handleClose = {() => setProductToDisplay(null)} product = {productToDisplay} isPreviewMode = {true} />\n        </div>\n    );\n}\n\nexport default HomeScreen;","/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/price/priceHelper.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/confirmationDialog.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/helpers/firebase/image/imageUpload.js",["139"],"import 'firebase/storage';\nimport firebaseApp from '../../../firebaseConfig';\n\nexport const uploadImageToFirebaseStorage = async (image) => {\n    if (!image) return;\n    const storage = firebaseApp.storage();\n    const fileName = `${Date.now()}_${image.name}}`;\n    try {\n        await storage.ref(`images/${fileName}`).put(image);\n        return await storage.ref('images').child(`${fileName}`).getDownloadURL();\n    } catch (e) {\n        console.log(\"postReturn33\");\n        throw ({'error': e.error});\n    }\n}","/Users/krzysztofdziedzic/react/cms-frontend/src/screens/products_management/styles/productManagementStyles.js",[],"/Users/krzysztofdziedzic/react/cms-frontend/src/components/dialog/productDetailsDialog.js",["140"],"import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@material-ui/core';\nimport { Image } from '@material-ui/icons';\n\nimport { generalStyles } from '../../styles/mui/generalStyles';\nimport { convertPrice } from '../../helpers/price/priceHelper';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const dialogStyles = makeStyles({\n    dialogTitle: {\n        padding: 0\n    },\n    dialogProductInfo: {\n        padding: '16px'\n    },\n    dialogProductImage: {\n        maxWidth: '100%'\n    }\n});\n\nfunction ProductDetailslDialog(props) {\n    const styles = generalStyles();\n    const classes = dialogStyles();\n    const { product } = props;\n\n    if (product == null) return (<div></div>);\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            scroll=\"paper\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"#121212\",\n                },\n            }}>\n            <DialogTitle className={`${classes.dialogTitle}`}>\n                <Grid container alignItems=\"center\">\n                    <Grid item xs={4}>\n                        {product.imageUrl == null\n                            ? <Image className={styles.dialogImage} />\n                            : <img src={product.imageUrl} className={classes.dialogProductImage} />}\n                    </Grid>\n                    <Grid item xs={8} className={`${styles.text} ${classes.dialogProductInfo}`}>\n                        <Grid item xs={12}> <b>Nazwa:</b> {product.name} </Grid>\n                        <Grid item xs={12}> <b>Cena:</b> {convertPrice(product.price)} </Grid>\n                    </Grid>\n                </Grid>\n            </DialogTitle>\n\n            <DialogContent className={styles.text}>\n\n                <DialogContentText\n                    id=\"scroll-dialog-description\"\n                    className={styles.text}\n                    tabIndex={-1}>\n                    <div className={styles.text}>\n                        {product.description}\n                    </div>\n                </DialogContentText>\n            </DialogContent>\n\n            {props.isPreviewMode ? null :\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dodaj do koszyka\n                </Button>\n                </DialogActions>\n            }\n        </Dialog>\n\n    );\n}\n\nexport default ProductDetailslDialog;",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":10,"column":10,"nodeType":"147","messageId":"148","endLine":10,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":19,"column":58,"nodeType":"147","messageId":"148","endLine":19,"endColumn":63},{"ruleId":"145","severity":1,"message":"150","line":32,"column":19,"nodeType":"147","messageId":"148","endLine":32,"endColumn":25},{"ruleId":"145","severity":1,"message":"151","line":31,"column":17,"nodeType":"147","messageId":"148","endLine":31,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":58,"column":67,"nodeType":"154","messageId":"155","endLine":58,"endColumn":69},{"ruleId":"152","severity":1,"message":"153","line":87,"column":70,"nodeType":"154","messageId":"155","endLine":87,"endColumn":72},{"ruleId":"152","severity":1,"message":"153","line":117,"column":72,"nodeType":"154","messageId":"155","endLine":117,"endColumn":74},{"ruleId":"145","severity":1,"message":"156","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"157","line":2,"column":19,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":64,"column":8,"nodeType":"160","endLine":64,"endColumn":10,"suggestions":"161"},{"ruleId":"152","severity":1,"message":"157","line":45,"column":76,"nodeType":"154","messageId":"155","endLine":45,"endColumn":78},{"ruleId":"152","severity":1,"message":"153","line":46,"column":27,"nodeType":"154","messageId":"155","endLine":46,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":68,"column":82,"nodeType":"154","messageId":"155","endLine":68,"endColumn":84},{"ruleId":"158","severity":1,"message":"162","line":86,"column":15,"nodeType":"163","endLine":96,"endColumn":6},{"ruleId":"152","severity":1,"message":"153","line":105,"column":87,"nodeType":"154","messageId":"155","endLine":105,"endColumn":89},{"ruleId":"164","severity":1,"message":"165","line":114,"column":39,"nodeType":"166","endLine":114,"endColumn":69},{"ruleId":"152","severity":1,"message":"153","line":130,"column":88,"nodeType":"154","messageId":"155","endLine":130,"endColumn":90},{"ruleId":"164","severity":1,"message":"165","line":139,"column":39,"nodeType":"166","endLine":139,"endColumn":69},{"ruleId":"167","severity":1,"message":"168","line":9,"column":9,"nodeType":"169","messageId":"170","endLine":9,"endColumn":36},{"ruleId":"167","severity":1,"message":"168","line":18,"column":9,"nodeType":"169","messageId":"170","endLine":18,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":27,"column":9,"nodeType":"169","messageId":"170","endLine":27,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":36,"column":9,"nodeType":"169","messageId":"170","endLine":36,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":45,"column":9,"nodeType":"169","messageId":"170","endLine":45,"endColumn":34},{"ruleId":"145","severity":1,"message":"149","line":63,"column":58,"nodeType":"147","messageId":"148","endLine":63,"endColumn":63},{"ruleId":"158","severity":1,"message":"171","line":76,"column":10,"nodeType":"160","endLine":76,"endColumn":32,"suggestions":"172"},{"ruleId":"164","severity":1,"message":"165","line":278,"column":27,"nodeType":"166","endLine":278,"endColumn":79},{"ruleId":"158","severity":1,"message":"162","line":20,"column":15,"nodeType":"163","endLine":31,"endColumn":6},{"ruleId":"164","severity":1,"message":"165","line":54,"column":39,"nodeType":"166","endLine":54,"endColumn":69},{"ruleId":"167","severity":1,"message":"168","line":13,"column":9,"nodeType":"169","messageId":"170","endLine":13,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":45,"column":31,"nodeType":"166","endLine":45,"endColumn":100},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'result' is assigned a value but never used.","'registeredUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'green' is defined but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["175"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has a missing dependency: 'productData'. Either include it or remove the dependency array.",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [history]",{"range":"181","text":"182"},"Update the dependencies array to be: [open, prevVisibility, productData]",{"range":"183","text":"184"},[1895,1897],"[history]",[2230,2252],"[open, prevVisibility, productData]"]